---
- name: "CERTIFICATE : HETZNER DNS-01"
  block:
    - name: "CERTIFICATE {{ le_certificate_loop.domain }} : HETZNER DNS-01 - ensure username is defined"
      fail:
        msg: "Unable to get Hetzner Robot username from certificate variable 'auth_username' or default
              variable 'le_dns_hetzner_auth_username'!"
      when: (le_certificate_loop.auth_username| default(le_dns_hetzner_auth_username, True)| default('', True)) == ""

    - name: "CERTIFICATE {{ le_certificate_loop.domain }} : HETZNER DNS-01 - ensure password is defined"
      fail:
        msg: "Unable to get Hetzner Robot password from certificate variable 'auth_password' or default
              variable 'le_dns_hetzner_auth_password'!"
      when: (le_certificate_loop.auth_password| default(le_dns_hetzner_auth_password, True)| default('', True)) == ""

    - name: "CERTIFICATE {{ le_certificate_loop.domain }} : HETZNER DNS-01 - sign/renew certificate"
      shell: >
        {{ (le_certificate_loop.option_envs| default(le_dns_hetzner_option_envs))| join(' ') }}
        {{ le_certificate_loop_dns_provider|upper }}_AUTH_USERNAME='{{ le_certificate_loop.auth_username|
        default(le_dns_hetzner_auth_username, True) }}'
        {{ le_certificate_loop_dns_provider|upper }}_AUTH_PASSWORD='{{ le_certificate_loop.auth_password|
        default(le_dns_hetzner_auth_password, True) }}'
        /opt/letsencrypt/dehydrated/dehydrated -c
        -d '{{ le_certificate_loop.domain }} {{ le_certificate_loop.altnames | default('') }}'
        -t 'dns-01' -k '{{ le_dehydrated_hooks_dir }}/hetzner/{{ le_dns_hetzner_hook_file }}'
      async: 1500
      poll: 15
      no_log: yes
  tags:
    - always
